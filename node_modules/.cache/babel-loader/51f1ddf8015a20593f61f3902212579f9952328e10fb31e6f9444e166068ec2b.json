{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\Ecom\\\\Front\\\\src\\\\Componet\\\\auth\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Button, Container, Typography, Box, CircularProgress } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport api from \"../../api\"; // Axios instance\n\n// Redux action\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst resetPasswordAction = userData => async dispatch => {\n  try {\n    dispatch({\n      type: \"RESET_PASSWORD_REQUEST\"\n    });\n    const {\n      data\n    } = await api.post(\"/users/reset-password\", userData);\n    dispatch({\n      type: \"RESET_PASSWORD_SUCCESS\",\n      payload: data.message\n    });\n    toast.success(data.message);\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch({\n      type: \"RESET_PASSWORD_FAIL\",\n      payload: error.response ? error.response.data.message : error.message\n    });\n    toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Something went wrong!\");\n  }\n};\nconst ResetPassword = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    success,\n    error\n  } = useSelector(state => state.resetPassword);\n\n  // Formik setup\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      otp: \"\",\n      newPassword: \"\"\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n      otp: Yup.string().required(\"OTP is required\"),\n      newPassword: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"New password is required\")\n    }),\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      dispatch(resetPasswordAction(values));\n      resetForm();\n    }\n  });\n  useEffect(() => {\n    if (success) {\n      toast.success(\"Password reset successful!\");\n    }\n    if (error) {\n      toast.error(error);\n    }\n  }, [success, error]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 5,\n        p: 3,\n        boxShadow: 3,\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Email\",\n          name: \"email\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          error: formik.touched.email && Boolean(formik.errors.email),\n          helperText: formik.touched.email && formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"OTP\",\n          name: \"otp\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: formik.values.otp,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          error: formik.touched.otp && Boolean(formik.errors.otp),\n          helperText: formik.touched.otp && formik.errors.otp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"New Password\",\n          name: \"newPassword\",\n          type: \"password\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: formik.values.newPassword,\n          v: true,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          error: formik.touched.newPassword && Boolean(formik.errors.newPassword),\n          helperText: formik.touched.newPassword && formik.errors.newPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          disabled: loading || formik.isSubmitting,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 24\n          }, this) : \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"EXSZm/fsMwBXuNM08ZNZrMMM5Yw=\", false, function () {\n  return [useDispatch, useSelector, useFormik];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useEffect","useFormik","Yup","TextField","Button","Container","Typography","Box","CircularProgress","useDispatch","useSelector","toast","api","jsxDEV","_jsxDEV","resetPasswordAction","userData","dispatch","type","data","post","payload","message","success","error","_error$response","_error$response$data","response","ResetPassword","_s","loading","state","resetPassword","formik","initialValues","email","otp","newPassword","validationSchema","object","string","required","min","onSubmit","values","resetForm","maxWidth","children","sx","mt","p","boxShadow","borderRadius","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","fullWidth","label","name","margin","value","onChange","handleChange","onBlur","handleBlur","touched","Boolean","errors","helperText","v","color","disabled","isSubmitting","size","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/Ecom/Front/src/Componet/auth/ResetPassword.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { TextField, Button, Container, Typography, Box, CircularProgress } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../../api\"; // Axios instance\r\n\r\n// Redux action\r\nconst resetPasswordAction = (userData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: \"RESET_PASSWORD_REQUEST\" });\r\n    const { data } = await api.post(\"/users/reset-password\", userData);\r\n    dispatch({ type: \"RESET_PASSWORD_SUCCESS\", payload: data.message });\r\n    toast.success(data.message);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"RESET_PASSWORD_FAIL\",\r\n      payload: error.response ? error.response.data.message : error.message,\r\n    });\r\n    toast.error(error.response?.data?.message || \"Something went wrong!\");\r\n  }\r\n};\r\n\r\nconst ResetPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading, success, error } = useSelector((state) => state.resetPassword);\r\n\r\n  // Formik setup\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      otp: \"\",\r\n      newPassword: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n      otp: Yup.string().required(\"OTP is required\"),\r\n      newPassword: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"New password is required\"),\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      dispatch(resetPasswordAction(values));\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      toast.success(\"Password reset successful!\");\r\n    }\r\n    if (error) {\r\n      toast.error(error);\r\n    }\r\n  }, [success, error]);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box sx={{ mt: 5, p: 3, boxShadow: 3, borderRadius: 2 }}>\r\n        <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n          Reset Password\r\n        </Typography>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          {/* Email Field */}\r\n          <TextField\r\n            fullWidth\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n\r\n          {/* OTP Field */}\r\n          <TextField\r\n            fullWidth\r\n            label=\"OTP\"\r\n            name=\"otp\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            value={formik.values.otp}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.touched.otp && Boolean(formik.errors.otp)}\r\n            helperText={formik.touched.otp && formik.errors.otp}\r\n          />\r\n\r\n          {/* New Password Field */}\r\n          <TextField\r\n            fullWidth\r\n            label=\"New Password\"\r\n            name=\"newPassword\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            value={formik.values.newPassword}      v \r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.touched.newPassword && Boolean(formik.errors.newPassword)}\r\n            helperText={formik.touched.newPassword && formik.errors.newPassword}\r\n          />\r\n\r\n          {/* Submit Button */}\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            sx={{ mt: 2 }}\r\n            disabled={loading || formik.isSubmitting}\r\n          >\r\n            {loading ? <CircularProgress size={24} /> : \"Reset Password\"}\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}