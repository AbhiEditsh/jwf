{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\Ecom\\\\Front\\\\src\\\\Componet\\\\auth\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Button, Container, Typography, Box, CircularProgress } from \"@mui/material\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { RegisterData } from \"../../redux/actions/productActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    success,\n    error,\n    data\n  } = useSelector(state => state.Register);\n\n  // Formik configuration\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().min(3, \"Username must be at least 3 characters\").required(\"Username is required\"),\n      email: Yup.string().email(\"Invalid email format\").required(\"Email is required\"),\n      password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\")\n    }),\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      dispatch(RegisterData(values));\n      resetForm();\n    }\n  });\n  useEffect(() => {\n    if (success && data) {\n      toast.success(data);\n      formik.resetForm();\n    } else if (error) {\n      toast.error(error);\n    }\n    // eslint-disable-next-line\n  }, [success, error, data]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 5,\n        p: 3,\n        boxShadow: 3,\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        positionposition: \"top-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Username\",\n          name: \"username\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          size: \"small\",\n          value: formik.values.username,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          error: formik.touched.username && Boolean(formik.errors.username),\n          helperText: formik.touched.username && formik.errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Email\",\n          name: \"email\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          size: \"small\",\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          error: formik.touched.email && Boolean(formik.errors.email),\n          helperText: formik.touched.email && formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Password\",\n          name: \"password\",\n          type: \"password\",\n          variant: \"outlined\",\n          size: \"small\",\n          margin: \"normal\",\n          value: formik.values.password,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          error: formik.touched.password && Boolean(formik.errors.password),\n          helperText: formik.touched.password && formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"outlined\",\n          color: \"primary\",\n          sx: {\n            mt: 2,\n            maxWidth: \"120px\",\n            width: \"100%\",\n            margin: \"10px auto\",\n            display: \"block\",\n            borderRadius: \"50px\"\n          },\n          disabled: formik.isSubmitting,\n          children: formik.isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 36\n          }, this) : \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            textAlign: 'center'\n          },\n          children: [\"Don't have account?\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"wSce0BwabTsQd0mSZzrR33X4t0k=\", false, function () {\n  return [useDispatch, useSelector, useFormik];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useEffect","useFormik","Yup","TextField","Button","Container","Typography","Box","CircularProgress","toast","ToastContainer","RegisterData","useDispatch","useSelector","Link","jsxDEV","_jsxDEV","Register","_s","dispatch","success","error","data","state","formik","initialValues","username","email","password","validationSchema","object","string","min","required","onSubmit","values","resetForm","maxWidth","children","sx","mt","p","boxShadow","borderRadius","positionposition","fileName","_jsxFileName","lineNumber","columnNumber","variant","align","gutterBottom","handleSubmit","fullWidth","label","name","margin","size","value","onChange","handleChange","onBlur","handleBlur","touched","Boolean","errors","helperText","type","color","width","display","disabled","isSubmitting","textAlign","to","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/Ecom/Front/src/Componet/auth/Register.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { RegisterData } from \"../../redux/actions/productActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n  const dispatch = useDispatch();\r\n  const { success, error, data } = useSelector((state) => state.Register);\r\n\r\n  // Formik configuration\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      username: Yup.string()\r\n        .min(3, \"Username must be at least 3 characters\")\r\n        .required(\"Username is required\"),\r\n      email: Yup.string()\r\n        .email(\"Invalid email format\")\r\n        .required(\"Email is required\"),\r\n      password: Yup.string()\r\n        .min(6, \"Password must be at least 6 characters\")\r\n        .required(\"Password is required\"),\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      dispatch(RegisterData(values));\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (success && data) {\r\n      toast.success(data);\r\n      formik.resetForm();\r\n    } else if (error) {\r\n      toast.error(error);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [success, error, data]);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box sx={{ mt: 5, p: 3, boxShadow: 3, borderRadius: 2 }}>\r\n        <ToastContainer positionposition=\"top-center\" />\r\n\r\n        <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n          Register\r\n        </Typography>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          {/* Username Field */}\r\n          <TextField\r\n            fullWidth\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            value={formik.values.username}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.touched.username && Boolean(formik.errors.username)}\r\n            helperText={formik.touched.username && formik.errors.username}\r\n          />\r\n\r\n          {/* Email Field */}\r\n          <TextField\r\n            fullWidth\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n\r\n          {/* Password Field */}\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            margin=\"normal\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n\r\n          {/* Submit Button */}\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            sx={{\r\n              mt: 2,\r\n              maxWidth: \"120px\",\r\n              width: \"100%\",\r\n              margin: \"10px auto\",\r\n              display: \"block\",\r\n              borderRadius: \"50px\",\r\n            }}\r\n            disabled={formik.isSubmitting}\r\n          >\r\n            {formik.isSubmitting ? <CircularProgress size={24} /> : \"Register\"}\r\n          </Button>\r\n\r\n          <Typography sx={{\r\n            textAlign:'center'\r\n          }}>\r\n            Don't have account?\r\n            <Link to=\"/login\">Login</Link>\r\n          </Typography>\r\n        </form>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}