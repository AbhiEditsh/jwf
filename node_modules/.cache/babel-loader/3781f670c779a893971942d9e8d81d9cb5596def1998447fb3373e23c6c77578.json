{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\Ecom\\\\Front\\\\src\\\\Componet\\\\auth\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { TextField, Button, Container, Typography, Box, CircularProgress } from \"@mui/material\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ResetData } from \"../../redux/actions/productActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    data,\n    error\n  } = useSelector(state => state.resetPassword || {\n    data: null,\n    error: null\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      otp: \"\",\n      newPassword: \"\"\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n      otp: Yup.string().required(\"OTP is required\"),\n      newPassword: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"New password is required\")\n    }),\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      dispatch(ResetData(values));\n      resetForm();\n    }\n  });\n  useEffect(() => {\n    if (data) {\n      toast.success(data.message);\n    } else if (error) {\n      toast.error(error.message);\n    }\n  }, [data, error]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 5,\n        p: 3,\n        boxShadow: 3,\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Email\",\n          name: \"email\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          error: formik.touched.email && Boolean(formik.errors.email),\n          helperText: formik.touched.email && formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"OTP\",\n          name: \"otp\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: formik.values.otp,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          error: formik.touched.otp && Boolean(formik.errors.otp),\n          helperText: formik.touched.otp && formik.errors.otp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"New Password\",\n          name: \"newPassword\",\n          type: \"password\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          value: formik.values.newPassword,\n          v: true,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          error: formik.touched.newPassword && Boolean(formik.errors.newPassword),\n          helperText: formik.touched.newPassword && formik.errors.newPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"outlined\",\n          color: \"primary\",\n          sx: {\n            mt: 2,\n            maxWidth: \"120px\",\n            width: \"100%\",\n            margin: \"10px auto\",\n            display: \"block\",\n            borderRadius: \"50px\"\n          },\n          children: formik.isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this) : \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"lLFqVtxzthw+1ODLQXNNHgufa6Q=\", false, function () {\n  return [useDispatch, useSelector, useFormik];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useEffect","useFormik","Yup","TextField","Button","Container","Typography","Box","CircularProgress","toast","ToastContainer","useDispatch","useSelector","ResetData","jsxDEV","_jsxDEV","ResetPassword","_s","dispatch","data","error","state","resetPassword","formik","initialValues","email","otp","newPassword","validationSchema","object","string","required","min","onSubmit","values","resetForm","success","message","maxWidth","children","sx","mt","p","boxShadow","borderRadius","position","fileName","_jsxFileName","lineNumber","columnNumber","variant","align","gutterBottom","handleSubmit","fullWidth","label","name","margin","value","onChange","handleChange","onBlur","handleBlur","touched","Boolean","errors","helperText","type","v","color","width","display","isSubmitting","size","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/Ecom/Front/src/Componet/auth/ResetPassword.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ResetData } from \"../../redux/actions/productActions\";\r\n\r\nconst ResetPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const { data, error } = useSelector(\r\n    (state) =>\r\n      state.resetPassword || {\r\n        data: null,\r\n        error: null,\r\n      }\r\n  );\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      otp: \"\",\r\n      newPassword: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n      otp: Yup.string().required(\"OTP is required\"),\r\n      newPassword: Yup.string()\r\n        .min(6, \"Password must be at least 6 characters\")\r\n        .required(\"New password is required\"),\r\n    }),\r\n    onSubmit: (values, { resetForm }) => {\r\n      dispatch(ResetData(values));\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      toast.success(data.message);\r\n    } else if (error) {\r\n      toast.error(error.message);\r\n    }\r\n  }, [data, error]);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Box sx={{ mt: 5, p: 3, boxShadow: 3, borderRadius: 2 }}>\r\n        <ToastContainer position=\"top-center\" />\r\n        <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n          Reset Password\r\n        </Typography>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"OTP\"\r\n            name=\"otp\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            value={formik.values.otp}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.touched.otp && Boolean(formik.errors.otp)}\r\n            helperText={formik.touched.otp && formik.errors.otp}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"New Password\"\r\n            name=\"newPassword\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            value={formik.values.newPassword}\r\n            v\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={\r\n              formik.touched.newPassword && Boolean(formik.errors.newPassword)\r\n            }\r\n            helperText={formik.touched.newPassword && formik.errors.newPassword}\r\n          />\r\n\r\n          {/* Submit Button */}\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            sx={{\r\n              mt: 2,\r\n              maxWidth: \"120px\",\r\n              width: \"100%\",\r\n              margin: \"10px auto\",\r\n              display: \"block\",\r\n              borderRadius: \"50px\",\r\n            }}\r\n          >\r\n            {formik.isSubmitting ? (\r\n              <CircularProgress size={24} />\r\n            ) : (\r\n              \"Submit\"\r\n            )}\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}