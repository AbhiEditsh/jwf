{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\Ecom\\\\Front\\\\src\\\\Componet\\\\auth\\\\UserProfile\\\\UserUpdateForm.jsx\";\n// import React, { useState } from \"react\";\n// import { useFormik } from \"formik\";\n// import * as Yup from \"yup\";\n// import axios from \"axios\";\n// import { TextField, Button, LinearProgress, Avatar } from \"@mui/material\";\n// import CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\n\n// const validationSchema = Yup.object({\n//   username: Yup.string().required(\"Username is required\"),\n//   email: Yup.string()\n//     .email(\"Invalid email address\")\n//     .required(\"Email is required\"),\n//   password: Yup.string().min(6, \"Password must be at least 6 characters\"),\n//   bio: Yup.string(),\n//   profession: Yup.string(),\n//   address: Yup.object({\n//     street: Yup.string(),\n//     city: Yup.string(),\n//     state: Yup.string(),\n//     postalCode: Yup.string(),\n//     country: Yup.string(),\n//   }),\n// });\n\n// const UserUpdateForm = ({ user }) => {\n//   console.log(user);\n\n//   const [profileImage, setProfileImage] = useState(null);\n//   const [previewImage, setPreviewImage] = useState(user.profilePicture || \"\");\n\n//   const formik = useFormik({\n//     initialValues: {\n//       username: user?.username || \"\",\n//       email: user?.email || \"\",\n//       password: \"\",\n//       bio: user?.bio || \"\",\n//       profession: user?.profession || \"\",\n//       address: {\n//         street: user?.address?.street || \"\",\n//         city: user?.address?.city || \"\",\n//         state: user?.address?.state || \"\",\n//         postalCode: user?.address?.postalCode || \"\",\n//         country: user?.address?.country || \"\",\n//       },\n//     },\n//     validationSchema,\n//     onSubmit: async (values, { setSubmitting }) => {\n//       const formData = new FormData();\n//       formData.append(\"username\", values.username);\n//       formData.append(\"email\", values.email);\n//       formData.append(\"password\", values.password);\n//       formData.append(\"bio\", values.bio);\n//       formData.append(\"profession\", values.profession);\n//       formData.append(\"address\", JSON.stringify(values.address));\n//       if (profileImage) formData.append(\"profilePicture\", profileImage);\n\n//       try {\n//         const response = await axios.put(\n//           \"http://localhost:5000/api/users/update\",\n//           formData,\n//           {\n//             headers: {\n//               \"Content-Type\": \"multipart/form-data\",\n//               Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Replace with your token management\n//             },\n//           }\n//         );\n//         alert(\"Profile updated successfully!\");\n//       } catch (error) {\n//         console.error(\"Error updating profile:\", error);\n//       } finally {\n//         setSubmitting(false);\n//       }\n//     },\n//   });\n\n//   return (\n//     <form onSubmit={formik.handleSubmit}>\n//       <Avatar src={previewImage} sx={{ width: 80, height: 80, mb: 2 }} />\n//       <input\n//         accept=\"image/*\"\n//         type=\"file\"\n//         id=\"profileImage\"\n//         hidden\n//         onChange={(event) => {\n//           const file = event.currentTarget.files[0];\n//           setProfileImage(file);\n//           setPreviewImage(URL.createObjectURL(file));\n//         }}\n//       />\n//       <label htmlFor=\"profileImage\">\n//         <Button\n//           variant=\"contained\"\n//           component=\"span\"\n//           startIcon={<CloudUploadIcon />}\n//         >\n//           Upload Profile Picture\n//         </Button>\n//       </label>\n\n//       <TextField\n//         fullWidth\n//         margin=\"normal\"\n//         label=\"Username\"\n//         name=\"username\"\n//         value={formik.values.username}\n//         onChange={formik.handleChange}\n//         error={formik.touched.username && Boolean(formik.errors.username)}\n//         helperText={formik.touched.username && formik.errors.username}\n//       />\n//       <TextField\n//         fullWidth\n//         margin=\"normal\"\n//         label=\"Email\"\n//         name=\"email\"\n//         value={formik.values.email}\n//         onChange={formik.handleChange}\n//         error={formik.touched.email && Boolean(formik.errors.email)}\n//         helperText={formik.touched.email && formik.errors.email}\n//       />\n//       <TextField\n//         fullWidth\n//         margin=\"normal\"\n//         label=\"Password\"\n//         type=\"password\"\n//         name=\"password\"\n//         onChange={formik.handleChange}\n//       />\n//       <TextField\n//         fullWidth\n//         margin=\"normal\"\n//         label=\"Bio\"\n//         name=\"bio\"\n//         value={formik.values.bio}\n//         onChange={formik.handleChange}\n//       />\n//       <TextField\n//         fullWidth\n//         margin=\"normal\"\n//         label=\"Profession\"\n//         name=\"profession\"\n//         value={formik.values.profession}\n//         onChange={formik.handleChange}\n//       />\n\n//       {/* Address Fields */}\n//       <TextField\n//         fullWidth\n//         margin=\"normal\"\n//         label=\"Street\"\n//         name=\"address.street\"\n//         value={formik.values.address.street}\n//         onChange={formik.handleChange}\n//       />\n//       <TextField\n//         fullWidth\n//         margin=\"normal\"\n//         label=\"City\"\n//         name=\"address.city\"\n//         value={formik.values.address.city}\n//         onChange={formik.handleChange}\n//       />\n//       <TextField\n//         fullWidth\n//         margin=\"normal\"\n//         label=\"State\"\n//         name=\"address.state\"\n//         value={formik.values.address.state}\n//         onChange={formik.handleChange}\n//       />\n//       <TextField\n//         fullWidth\n//         margin=\"normal\"\n//         label=\"Postal Code\"\n//         name=\"address.postalCode\"\n//         value={formik.values.address.postalCode}\n//         onChange={formik.handleChange}\n//       />\n//       <TextField\n//         fullWidth\n//         margin=\"normal\"\n//         label=\"Country\"\n//         name=\"address.country\"\n//         value={formik.values.address.country}\n//         onChange={formik.handleChange}\n//       />\n\n//       {formik.isSubmitting && <LinearProgress sx={{ my: 2 }} />}\n//       <Button\n//         type=\"submit\"\n//         variant=\"contained\"\n//         color=\"primary\"\n//         disabled={formik.isSubmitting}\n//       >\n//         Update Profile\n//       </Button>\n//     </form>\n//   );\n// };\n\n// export default UserUpdateForm;\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserUpdateForm() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"UserUpdateForm\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_c = UserUpdateForm;\nexport default UserUpdateForm;\nvar _c;\n$RefreshReg$(_c, \"UserUpdateForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UserUpdateForm","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/Ecom/Front/src/Componet/auth/UserProfile/UserUpdateForm.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useFormik } from \"formik\";\r\n// import * as Yup from \"yup\";\r\n// import axios from \"axios\";\r\n// import { TextField, Button, LinearProgress, Avatar } from \"@mui/material\";\r\n// import CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\n\r\n// const validationSchema = Yup.object({\r\n//   username: Yup.string().required(\"Username is required\"),\r\n//   email: Yup.string()\r\n//     .email(\"Invalid email address\")\r\n//     .required(\"Email is required\"),\r\n//   password: Yup.string().min(6, \"Password must be at least 6 characters\"),\r\n//   bio: Yup.string(),\r\n//   profession: Yup.string(),\r\n//   address: Yup.object({\r\n//     street: Yup.string(),\r\n//     city: Yup.string(),\r\n//     state: Yup.string(),\r\n//     postalCode: Yup.string(),\r\n//     country: Yup.string(),\r\n//   }),\r\n// });\r\n\r\n// const UserUpdateForm = ({ user }) => {\r\n//   console.log(user);\r\n\r\n//   const [profileImage, setProfileImage] = useState(null);\r\n//   const [previewImage, setPreviewImage] = useState(user.profilePicture || \"\");\r\n\r\n//   const formik = useFormik({\r\n//     initialValues: {\r\n//       username: user?.username || \"\",\r\n//       email: user?.email || \"\",\r\n//       password: \"\",\r\n//       bio: user?.bio || \"\",\r\n//       profession: user?.profession || \"\",\r\n//       address: {\r\n//         street: user?.address?.street || \"\",\r\n//         city: user?.address?.city || \"\",\r\n//         state: user?.address?.state || \"\",\r\n//         postalCode: user?.address?.postalCode || \"\",\r\n//         country: user?.address?.country || \"\",\r\n//       },\r\n//     },\r\n//     validationSchema,\r\n//     onSubmit: async (values, { setSubmitting }) => {\r\n//       const formData = new FormData();\r\n//       formData.append(\"username\", values.username);\r\n//       formData.append(\"email\", values.email);\r\n//       formData.append(\"password\", values.password);\r\n//       formData.append(\"bio\", values.bio);\r\n//       formData.append(\"profession\", values.profession);\r\n//       formData.append(\"address\", JSON.stringify(values.address));\r\n//       if (profileImage) formData.append(\"profilePicture\", profileImage);\r\n\r\n//       try {\r\n//         const response = await axios.put(\r\n//           \"http://localhost:5000/api/users/update\",\r\n//           formData,\r\n//           {\r\n//             headers: {\r\n//               \"Content-Type\": \"multipart/form-data\",\r\n//               Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Replace with your token management\r\n//             },\r\n//           }\r\n//         );\r\n//         alert(\"Profile updated successfully!\");\r\n//       } catch (error) {\r\n//         console.error(\"Error updating profile:\", error);\r\n//       } finally {\r\n//         setSubmitting(false);\r\n//       }\r\n//     },\r\n//   });\r\n\r\n//   return (\r\n//     <form onSubmit={formik.handleSubmit}>\r\n//       <Avatar src={previewImage} sx={{ width: 80, height: 80, mb: 2 }} />\r\n//       <input\r\n//         accept=\"image/*\"\r\n//         type=\"file\"\r\n//         id=\"profileImage\"\r\n//         hidden\r\n//         onChange={(event) => {\r\n//           const file = event.currentTarget.files[0];\r\n//           setProfileImage(file);\r\n//           setPreviewImage(URL.createObjectURL(file));\r\n//         }}\r\n//       />\r\n//       <label htmlFor=\"profileImage\">\r\n//         <Button\r\n//           variant=\"contained\"\r\n//           component=\"span\"\r\n//           startIcon={<CloudUploadIcon />}\r\n//         >\r\n//           Upload Profile Picture\r\n//         </Button>\r\n//       </label>\r\n\r\n//       <TextField\r\n//         fullWidth\r\n//         margin=\"normal\"\r\n//         label=\"Username\"\r\n//         name=\"username\"\r\n//         value={formik.values.username}\r\n//         onChange={formik.handleChange}\r\n//         error={formik.touched.username && Boolean(formik.errors.username)}\r\n//         helperText={formik.touched.username && formik.errors.username}\r\n//       />\r\n//       <TextField\r\n//         fullWidth\r\n//         margin=\"normal\"\r\n//         label=\"Email\"\r\n//         name=\"email\"\r\n//         value={formik.values.email}\r\n//         onChange={formik.handleChange}\r\n//         error={formik.touched.email && Boolean(formik.errors.email)}\r\n//         helperText={formik.touched.email && formik.errors.email}\r\n//       />\r\n//       <TextField\r\n//         fullWidth\r\n//         margin=\"normal\"\r\n//         label=\"Password\"\r\n//         type=\"password\"\r\n//         name=\"password\"\r\n//         onChange={formik.handleChange}\r\n//       />\r\n//       <TextField\r\n//         fullWidth\r\n//         margin=\"normal\"\r\n//         label=\"Bio\"\r\n//         name=\"bio\"\r\n//         value={formik.values.bio}\r\n//         onChange={formik.handleChange}\r\n//       />\r\n//       <TextField\r\n//         fullWidth\r\n//         margin=\"normal\"\r\n//         label=\"Profession\"\r\n//         name=\"profession\"\r\n//         value={formik.values.profession}\r\n//         onChange={formik.handleChange}\r\n//       />\r\n\r\n//       {/* Address Fields */}\r\n//       <TextField\r\n//         fullWidth\r\n//         margin=\"normal\"\r\n//         label=\"Street\"\r\n//         name=\"address.street\"\r\n//         value={formik.values.address.street}\r\n//         onChange={formik.handleChange}\r\n//       />\r\n//       <TextField\r\n//         fullWidth\r\n//         margin=\"normal\"\r\n//         label=\"City\"\r\n//         name=\"address.city\"\r\n//         value={formik.values.address.city}\r\n//         onChange={formik.handleChange}\r\n//       />\r\n//       <TextField\r\n//         fullWidth\r\n//         margin=\"normal\"\r\n//         label=\"State\"\r\n//         name=\"address.state\"\r\n//         value={formik.values.address.state}\r\n//         onChange={formik.handleChange}\r\n//       />\r\n//       <TextField\r\n//         fullWidth\r\n//         margin=\"normal\"\r\n//         label=\"Postal Code\"\r\n//         name=\"address.postalCode\"\r\n//         value={formik.values.address.postalCode}\r\n//         onChange={formik.handleChange}\r\n//       />\r\n//       <TextField\r\n//         fullWidth\r\n//         margin=\"normal\"\r\n//         label=\"Country\"\r\n//         name=\"address.country\"\r\n//         value={formik.values.address.country}\r\n//         onChange={formik.handleChange}\r\n//       />\r\n\r\n//       {formik.isSubmitting && <LinearProgress sx={{ my: 2 }} />}\r\n//       <Button\r\n//         type=\"submit\"\r\n//         variant=\"contained\"\r\n//         color=\"primary\"\r\n//         disabled={formik.isSubmitting}\r\n//       >\r\n//         Update Profile\r\n//       </Button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default UserUpdateForm;\r\nimport React from 'react'\r\n\r\nfunction UserUpdateForm() {\r\n  return (\r\n    <div>\r\n      UserUpdateForm\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserUpdateForm\r\n"],"mappingszB,SAASC,cAAcA,CAAA,EAAG;EACxB,oBACED,OAAA;IAAAE,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAACC,EAAA,GANQN,cAAc;AAQvB,eAAeA,cAAc;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}