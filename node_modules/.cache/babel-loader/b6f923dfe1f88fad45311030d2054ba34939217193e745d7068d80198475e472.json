{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\Ecom\\\\Front\\\\src\\\\Componet\\\\auth\\\\ForgotPassword.jsx\";\n// import React, { useEffect } from \"react\";\n// import { useFormik } from \"formik\";\n// import * as Yup from \"yup\";\n// import {\n//   TextField,\n//   Button,\n//   Container,\n//   Typography,\n//   Box,\n//   CircularProgress,\n// } from \"@mui/material\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// import { toast, ToastContainer } from \"react-toastify\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\n// import theme from \"../../theme/theme\";\n// import logo from \"../../assets/image/images.jfif\";\n// import { ForgotData } from \"../../redux/actions/productActions\";\n\n// const ForgotPassword = () => {\n//   const dispatch = useDispatch();\n//   const { error, data } = useSelector((state) => state.Forgot);\n//   const formik = useFormik({\n//     initialValues: {\n//       email: \"\",\n//     },\n//     validationSchema: Yup.object({\n//       email: Yup.string()\n//         .email(\"Invalid email format\")\n//         .required(\"Email is required\"),\n//     }),\n//     onSubmit: (values, { resetForm }) => {\n//       dispatch(ForgotData(values));\n//       resetForm();\n//     },\n//   });\n\n//   useEffect(() => {\n//     if (data) {\n//       toast.success(data);\n//       formik.resetForm();\n//     } else if (error) {\n//       toast.error(error);\n//     }\n//     // eslint-disable-next-line\n//   }, [error, data]);\n\n//   return (\n//     <Container maxWidth=\"sm\">\n//       <Box sx={{ mt: 5, p: 3, boxShadow: 3, borderRadius: 2 }}>\n//         <Box\n//           sx={{\n//             display: \"flex\",\n//             justifyContent: \"center\",\n//           }}\n//         >\n//           <img\n//             src={logo}\n//             alt=\"logo\"\n//             style={{\n//               width: \"100%\",\n//               maxWidth: \"100px\",\n//               height: \"100px\",\n//               margin: \"0 auto\",\n//               textAlign: \"center\",\n//             }}\n//           />\n//         </Box>\n//         <ToastContainer positionposition=\"top-center\" />\n//         <Typography variant=\"h5\" align=\"center\" gutterBottom>\n//           Forgot Password\n//         </Typography>\n//         <Typography\n//           sx={{\n//             textAlign: \"center\",\n//           }}\n//         >\n//           Remember your password\n//           <Link\n//             to=\"/login\"\n//             style={{\n//               color: theme.palette.primary.main,\n//               margin: \"0 10px\",\n//             }}\n//           >\n//             Login Here..\n//           </Link>\n//         </Typography>\n//         <form onSubmit={formik.handleSubmit}>\n//           <TextField\n//             fullWidth\n//             label=\"Email\"\n//             name=\"email\"\n//             variant=\"outlined\"\n//             placeholder=\"Please enter email.....\"\n//             margin=\"normal\"\n//             size=\"small\"\n//             value={formik.values.email}\n//             onChange={formik.handleChange}\n//             onBlur={formik.handleBlur}\n//             error={formik.touched.email && Boolean(formik.errors.email)}\n//             helperText={formik.touched.email && formik.errors.email}\n//           />\n\n//           {/* Submit Button */}\n//           <Button\n//             type=\"submit\"\n//             variant=\"outlined\"\n//             color=\"primary\"\n//             sx={{\n//               mt: 2,\n//               maxWidth: \"120px\",\n//               width: \"100%\",\n//               margin: \"10px auto\",\n//               display: \"block\",\n//               borderRadius: \"50px\",\n//             }}\n//             disabled={formik.isSubmitting}\n//           >\n//             {formik.isSubmitting ? <CircularProgress size={24} /> : \"Register\"}\n//           </Button>\n//         </form>\n//       </Box>\n//     </Container>\n//   );\n// };\n\n// export default ForgotPassword;\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ForgotPassword","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/Ecom/Front/src/Componet/auth/ForgotPassword.jsx"],"sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import { useFormik } from \"formik\";\r\n// import * as Yup from \"yup\";\r\n// import {\r\n//   TextField,\r\n//   Button,\r\n//   Container,\r\n//   Typography,\r\n//   Box,\r\n//   CircularProgress,\r\n// } from \"@mui/material\";\r\n// import \"react-toastify/dist/ReactToastify.css\";\r\n// import { toast, ToastContainer } from \"react-toastify\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { Link } from \"react-router-dom\";\r\n// import theme from \"../../theme/theme\";\r\n// import logo from \"../../assets/image/images.jfif\";\r\n// import { ForgotData } from \"../../redux/actions/productActions\";\r\n\r\n\r\n// const ForgotPassword = () => {\r\n//   const dispatch = useDispatch();\r\n//   const { error, data } = useSelector((state) => state.Forgot);\r\n//   const formik = useFormik({\r\n//     initialValues: {\r\n//       email: \"\",\r\n//     },\r\n//     validationSchema: Yup.object({\r\n//       email: Yup.string()\r\n//         .email(\"Invalid email format\")\r\n//         .required(\"Email is required\"),\r\n//     }),\r\n//     onSubmit: (values, { resetForm }) => {\r\n//       dispatch(ForgotData(values));\r\n//       resetForm();\r\n//     },\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     if (data) {\r\n//       toast.success(data);\r\n//       formik.resetForm();\r\n//     } else if (error) {\r\n//       toast.error(error);\r\n//     }\r\n//     // eslint-disable-next-line\r\n//   }, [error, data]);\r\n\r\n//   return (\r\n//     <Container maxWidth=\"sm\">\r\n//       <Box sx={{ mt: 5, p: 3, boxShadow: 3, borderRadius: 2 }}>\r\n//         <Box\r\n//           sx={{\r\n//             display: \"flex\",\r\n//             justifyContent: \"center\",\r\n//           }}\r\n//         >\r\n//           <img\r\n//             src={logo}\r\n//             alt=\"logo\"\r\n//             style={{\r\n//               width: \"100%\",\r\n//               maxWidth: \"100px\",\r\n//               height: \"100px\",\r\n//               margin: \"0 auto\",\r\n//               textAlign: \"center\",\r\n//             }}\r\n//           />\r\n//         </Box>\r\n//         <ToastContainer positionposition=\"top-center\" />\r\n//         <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n//           Forgot Password\r\n//         </Typography>\r\n//         <Typography\r\n//           sx={{\r\n//             textAlign: \"center\",\r\n//           }}\r\n//         >\r\n//           Remember your password\r\n//           <Link\r\n//             to=\"/login\"\r\n//             style={{\r\n//               color: theme.palette.primary.main,\r\n//               margin: \"0 10px\",\r\n//             }}\r\n//           >\r\n//             Login Here..\r\n//           </Link>\r\n//         </Typography>\r\n//         <form onSubmit={formik.handleSubmit}>\r\n//           <TextField\r\n//             fullWidth\r\n//             label=\"Email\"\r\n//             name=\"email\"\r\n//             variant=\"outlined\"\r\n//             placeholder=\"Please enter email.....\"\r\n//             margin=\"normal\"\r\n//             size=\"small\"\r\n//             value={formik.values.email}\r\n//             onChange={formik.handleChange}\r\n//             onBlur={formik.handleBlur}\r\n//             error={formik.touched.email && Boolean(formik.errors.email)}\r\n//             helperText={formik.touched.email && formik.errors.email}\r\n//           />\r\n\r\n//           {/* Submit Button */}\r\n//           <Button\r\n//             type=\"submit\"\r\n//             variant=\"outlined\"\r\n//             color=\"primary\"\r\n//             sx={{\r\n//               mt: 2,\r\n//               maxWidth: \"120px\",\r\n//               width: \"100%\",\r\n//               margin: \"10px auto\",\r\n//               display: \"block\",\r\n//               borderRadius: \"50px\",\r\n//             }}\r\n//             disabled={formik.isSubmitting}\r\n//           >\r\n//             {formik.isSubmitting ? <CircularProgress size={24} /> : \"Register\"}\r\n//           </Button>\r\n//         </form>\r\n//       </Box>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default ForgotPassword;\r\nimport React from 'react'\r\n\r\nfunction ForgotPassword() {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,cAAcA,CAAA,EAAG;EACxB,oBACED,OAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAACC,EAAA,GANQL,cAAc;AAQvB,eAAeA,cAAc;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}