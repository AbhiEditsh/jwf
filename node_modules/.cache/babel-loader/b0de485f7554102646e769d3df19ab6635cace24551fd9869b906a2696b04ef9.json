{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\Ecom\\\\Front\\\\src\\\\Componet\\\\auth\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Formik, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Toaster, toast } from \"sonner\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { Box, Button, Container, Grid, TextField, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const navigate = useNavigate();\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object({\n    username: Yup.string().min(3, \"Username must be at least 3 characters\").required(\"Username is required\"),\n    email: Yup.string().email(\"Invalid email address\").required(\"Email is required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").matches(/[A-Z]/, \"Password must contain at least one uppercase letter\").matches(/[0-9]/, \"Password must contain at least one number\").matches(/[!@#$%^&*]/, \"Password must contain at least one special character\").required(\"Password is required\")\n  });\n  const handleRegister = async (values, {\n    setSubmitting\n  }) => {\n    try {\n      const response = await axios.post(\"http://localhost:6000/api/users/register\", values);\n      toast.success(response.data.message);\n      navigate(\"/verify\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"An error occurred\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"/z34UIA64SXV+hu9XgSVZu4AIgg=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","Link","useNavigate","Formik","Form","ErrorMessage","Yup","Toaster","toast","Visibility","VisibilityOff","Box","Button","Container","Grid","TextField","Typography","jsxDEV","_jsxDEV","Register","_s","passwordVisible","setPasswordVisible","navigate","initialValues","username","email","password","validationSchema","object","string","min","required","matches","handleRegister","values","setSubmitting","response","post","success","data","message","error","_error$response","_error$response$data","children","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/Ecom/Front/src/Componet/auth/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Formik, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Toaster, toast } from \"sonner\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nconst Register = () => {\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const initialValues = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    username: Yup.string()\r\n      .min(3, \"Username must be at least 3 characters\")\r\n      .required(\"Username is required\"),\r\n    email: Yup.string()\r\n      .email(\"Invalid email address\")\r\n      .required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .min(6, \"Password must be at least 6 characters\")\r\n      .matches(/[A-Z]/, \"Password must contain at least one uppercase letter\")\r\n      .matches(/[0-9]/, \"Password must contain at least one number\")\r\n      .matches(\r\n        /[!@#$%^&*]/,\r\n        \"Password must contain at least one special character\"\r\n      )\r\n      .required(\"Password is required\"),\r\n  });\r\n\r\n  const handleRegister = async (values, { setSubmitting }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:6000/api/users/register\",\r\n        values\r\n      );\r\n      toast.success(response.data.message);\r\n      navigate(\"/verify\");\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || \"An error occurred\");\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Toaster position=\"top-center\" />\r\n      <Container>\r\n        <Grid>\r\n            \r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}