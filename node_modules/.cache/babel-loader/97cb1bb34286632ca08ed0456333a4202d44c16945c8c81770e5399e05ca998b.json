{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\Ecom\\\\Front\\\\src\\\\Componet\\\\auth\\\\UserProfile\\\\OrderStatus.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserOrders } from \"../../../redux/actions/productActions\";\nimport { Container, Typography, Chip, CircularProgress, Alert, Table, TableHead, TableRow, TableCell, TableBody, Badge, Box } from \"@mui/material\";\n\n// Function to get chip color based on order status\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getStatusChipColor = status => {\n  switch (status) {\n    case \"Pending\":\n      return \"default\";\n    case \"Shipped\":\n      return \"primary\";\n    case \"Delivered\":\n      return \"success\";\n    case \"Cancelled\":\n      return \"error\";\n    default:\n      return \"default\";\n  }\n};\n\n// Format Date\nconst formatDate = date => {\n  return new Date(date).toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  });\n};\nconst OrderStatus = () => {\n  _s();\n  const dispatch = useDispatch();\n  const userOrders = useSelector(state => state.userOrders);\n  const {\n    loading,\n    orders,\n    error\n  } = userOrders;\n  useEffect(() => {\n    dispatch(getUserOrders());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [loading && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), orders && orders.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        overflowX: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: orders.map((order, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: formatDate(order.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: order.status,\n                color: getStatusChipColor(order.status)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"\\u20B9\", order.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), \" \", order.items.length, \" Items\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"button\",\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No orders found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderStatus, \"WorLMQpR5f3VlCTDEr5Q8TYDUkM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = OrderStatus;\nexport default OrderStatus;\nvar _c;\n$RefreshReg$(_c, \"OrderStatus\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","getUserOrders","Container","Typography","Chip","CircularProgress","Alert","Table","TableHead","TableRow","TableCell","TableBody","Badge","Box","jsxDEV","_jsxDEV","getStatusChipColor","status","formatDate","date","Date","toLocaleDateString","year","month","day","OrderStatus","_s","dispatch","userOrders","state","loading","orders","error","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","length","sx","overflowX","align","map","order","index","createdAt","label","color","amount","items","variant","_id","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/Ecom/Front/src/Componet/auth/UserProfile/OrderStatus.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserOrders } from \"../../../redux/actions/productActions\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Chip,\r\n  CircularProgress,\r\n  Alert,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Badge,\r\n  Box,\r\n} from \"@mui/material\";\r\n\r\n// Function to get chip color based on order status\r\nconst getStatusChipColor = (status) => {\r\n  switch (status) {\r\n    case \"Pending\":\r\n      return \"default\";\r\n    case \"Shipped\":\r\n      return \"primary\";\r\n    case \"Delivered\":\r\n      return \"success\";\r\n    case \"Cancelled\":\r\n      return \"error\";\r\n    default:\r\n      return \"default\";\r\n  }\r\n};\r\n\r\n// Format Date\r\nconst formatDate = (date) => {\r\n  return new Date(date).toLocaleDateString(\"en-US\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n  });\r\n};\r\n\r\nconst OrderStatus = () => {\r\n  const dispatch = useDispatch();\r\n  const userOrders = useSelector((state) => state.userOrders);\r\n  const { loading, orders, error } = userOrders;\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserOrders());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      {loading && <CircularProgress />}\r\n      {error && <Alert severity=\"error\">{error}</Alert>}\r\n      {orders && orders.length > 0 ? (\r\n        <Box sx={{ overflowX: 'auto' }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Order</TableCell>\r\n                <TableCell>Date</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                <TableCell align=\"center\">Total</TableCell>\r\n                <TableCell align=\"center\">Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {orders.map((order, index) => (\r\n                <TableRow key={order._id}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell>{formatDate(order.createdAt)}</TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      label={order.status}\r\n                      color={getStatusChipColor(order.status)}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Typography>₹{order.amount}</Typography> {order.items.length} Items\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Typography variant=\"button\">View Details</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      ) : (\r\n        <Typography>No orders found</Typography>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrderStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}